import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# Load 
df = pd.read_csv('new_drop_imputed_data.csv')


X = df[['Protein (g)', 'Nitrogen (g)', 'Phosphorus (P) (mg)']]


y = df['Methionine (mg/gN)']


# Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# linear-regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)
# Get the coefficients of the model
coefficients = model.coef_

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)


plt.scatter(y_test, y_pred)
plt.xlabel('Actual Values')
plt.ylabel('Predicted Values')
plt.title('Prediction of quantity of Methionine generated by full dataset')

# A line of prediction
line = np.linspace(min(y_test), max(y_test), 10)
plt.plot(line, line, 'r')
plt.savefig('Full-Linear Regression.png')
plt.show()

print('Mean Squared Error:', mse)
print('Mean Absolute Error:', mae)
print('R-squared:', r2)
print('Coefficients:', c
